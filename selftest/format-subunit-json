#!/usr/bin/env python
# Copyright (C) 2008-2010 Jelmer Vernooij <jelmer@samba.org>
# Copyright (C) 2016 Douglas Bagnall <douglas.bagnall@catalyst.net.nz>
# Published under the GNU GPL, v3 or later

import optparse
import os
import signal
import sys
import json

sys.path.insert(0, "bin/python")


def json_formatter(src_f, dest_f):
    """We're not even pretending to be a TestResult subclass; just read
    from stdin and look for elapsed-time tags."""
    results = {}

    for line in src_f:
        line = line.strip()
        print >>sys.stderr, line
        if line[:14] == 'elapsed-time: ':
            name, time = line[14:].rsplit(':', 1)
            results[name] = float(time)

    json.dump(results, dest_f,
              sort_keys=True, indent=2, separators=(',', ': '))


def main():
    parser = optparse.OptionParser("format-subunit-json [options]")
    parser.add_option("--verbose", action="store_true",
                      help="ignored, for compatibility")
    parser.add_option("--immediate", action="store_true",
                      help="ignored, for compatibility")
    parser.add_option("--prefix", type="string", default=".",
                      help="Prefix to write summary.json to")
    opts, args = parser.parse_args()

    fn = os.path.join(opts.prefix, "summary.json")
    f = open(fn, 'w')
    json_formatter(sys.stdin, f)
    f.close()
    print
    print "A JSON file summarising these tests performance found in:"
    print " ", fn


def handle_sigint(sig, stack):
    sys.exit(0)

signal.signal(signal.SIGINT, handle_sigint)
main()
